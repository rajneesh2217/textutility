{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","Title","type","id","aboutText","onClick","toggleMode","htmlFor","blueMode","TextForm","useState","Text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","length","defaultProps","about","Alert","alert","role","msg","App","setMode","setAlert","showAlert","massage","document","body","title","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb5dd8fd.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.Title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\"  href=\"/\">{props.aboutText}</a>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                    <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n                  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                 <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n                   </div>\r\n                     \r\n                   <div className={`form-check form-switch text-${props.mode==='light'?'blue':'light'}`}>\r\n                  <input className=\"form-check-input mx-3\" onClick={props.blueMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                 <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable blues mode</label>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\nNavbar.propTypes = {\r\n    Title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps={\r\n    Title:'is required',\r\n    about:'is required'\r\n};","import React ,{useState}from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was click\"+Text)\r\n        let newText=Text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLoClick =()=>{\r\n        // console.log(\"Lowercase was click\"+Text)\r\n        let newText=Text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleClearClick=()=>{\r\n        // console.log(\"Uppercase was click\"+Text)\r\n        let newText=\"\";\r\n        setText(newText)\r\n    }\r\n    const handleCopyClick=()=>{\r\n        // console.log(\"Uppercase was click\"+Text)\r\n        let newText=\"copyText.select()\";\r\n        setText(newText)\r\n    }\r\n \r\n    const handleonChange=(event)=>{\r\n        // console.log(\"onChange\")\r\n        setText(event.target.value)\r\n    }\r\n    const [Text, setText] = useState('Enter text here');\r\n    return (  <> \r\n                <div className=\"container\" style={{color:props.mode==='blue'?'red':'black'}} >\r\n                    <h1>{props.heading}</h1>\r\n                    <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={Text} onChange={handleonChange} style={{backgroundColor: props.mode==='blue'?'wheat':'white',color:props.mode==='blue'?'red':'black'}}  id=\"mybox\" rows=\"8\"></textarea>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" style={{color:props.mode==='blue'?'red':'black'}} onClick={handleUpClick}>convert to uppercase</button>\r\n                    <button className=\"btn btn-primary mx-2\" style={{color:props.mode==='blue'?'red':'black'}} onClick={handleLoClick}>convert to lowercase</button>\r\n                    <button className=\"btn btn-primary mx-2\" style={{color:props.mode==='blue'?'red':'black'}} onClick={handleClearClick}>Clear the text</button>\r\n                    <button className=\"btn btn-primary mx-2\" style={{color:props.mode==='blue'?'red':'black'}} onClick={handleCopyClick}>Copy to clickboard</button>\r\n                </div>\r\n                <div className=\"container my-3\"style={{color:props.mode==='blue'?'red':'black'}} >\r\n                    <h1>your text summary</h1>\r\n                    <p>{Text.split(\" \").length} words and {Text.length} character</p>\r\n                    <p>{0.008*Text.split(\" \").length} minuts required</p>\r\n                    <h2>priview</h2>\r\n                    <p>{Text.length>0?Text:\"Enter something to priview it here\"}</p>\r\n                </div>\r\n            </>\r\n            )\r\n    }\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n       props.alert&& <div className={`alert alert-${props.alert.type}alert-dismissible fade show`}  role=\"alert\">\r\n            <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert  from './components/Alert';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');//whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n  const showAlert=(massage ,type)=>{\n    setAlert({\n      msg:massage,\n      type:type\n    })\n  }\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='gray';\n      showAlert(\"darkmade is enable\",\"succsess\" );\n      document.title='textile is Amazing made';\n      setInterval(() => {\n        document.title='textile is amazing mode';\n      }, 2000);\n    \n    setInterval(() => {\n      document.title=' install textile is amazing mode';\n    }, 1500);\n  }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"lightmode is enable \",\"succsess\" )\n      \n    }\n  }\n  const blueMode = ()=>{\n    if(mode==='light'){\n      setMode('blue');\n      document.body.style.backgroundColor='blue';\n      showAlert(\"bluemade is enable\",\"succsess\" )\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"lightmode is enable \",\"succsess\" )\n      \n    }\n  }\n  return (\n    <>\n       <Navbar Title=\"textutility\"  mode={mode} toggleMode={toggleMode} blueMode={blueMode}/>\n       <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <TextForm heading=\"Enter the text to analyze below\" mode={mode}/>\n      {/* <About/> */}\n      </div>\n       \n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}